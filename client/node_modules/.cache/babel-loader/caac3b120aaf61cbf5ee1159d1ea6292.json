{"ast":null,"code":"(function () {\n  // save these original methods before they are overwritten\n  var proto_initIcon = L.Marker.prototype._initIcon;\n  var proto_setPos = L.Marker.prototype._setPos;\n  var oldIE = L.DomUtil.TRANSFORM === 'msTransform';\n  L.Marker.addInitHook(function () {\n    var iconOptions = this.options.icon && this.options.icon.options;\n    var iconAnchor = iconOptions && this.options.icon.options.iconAnchor;\n\n    if (iconAnchor) {\n      iconAnchor = iconAnchor[0] + 'px ' + iconAnchor[1] + 'px';\n    }\n\n    this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || 'center bottom';\n    this.options.rotationAngle = this.options.rotationAngle || 0; // Ensure marker keeps rotated during dragging\n\n    this.on('drag', function (e) {\n      e.target._applyRotation();\n    });\n  });\n  L.Marker.include({\n    _initIcon: function () {\n      proto_initIcon.call(this);\n    },\n    _setPos: function (pos) {\n      proto_setPos.call(this, pos);\n\n      this._applyRotation();\n    },\n    _applyRotation: function () {\n      if (this.options.rotationAngle) {\n        this._icon.style[L.DomUtil.TRANSFORM + 'Origin'] = this.options.rotationOrigin;\n\n        if (oldIE) {\n          // for IE 9, use the 2D rotation\n          this._icon.style[L.DomUtil.TRANSFORM] = 'rotate(' + this.options.rotationAngle + 'deg)';\n        } else {\n          // for modern browsers, prefer the 3D accelerated version\n          this._icon.style[L.DomUtil.TRANSFORM] += ' rotateZ(' + this.options.rotationAngle + 'deg)';\n        }\n      }\n    },\n    setRotationAngle: function (angle) {\n      this.options.rotationAngle = angle;\n      this.update();\n      return this;\n    },\n    setRotationOrigin: function (origin) {\n      this.options.rotationOrigin = origin;\n      this.update();\n      return this;\n    }\n  });\n})();","map":{"version":3,"sources":["/Users/helenemolberg/mobil-grensesnitt/node_modules/leaflet-rotatedmarker/leaflet.rotatedMarker.js"],"names":["proto_initIcon","L","Marker","prototype","_initIcon","proto_setPos","_setPos","oldIE","DomUtil","TRANSFORM","addInitHook","iconOptions","options","icon","iconAnchor","rotationOrigin","rotationAngle","on","e","target","_applyRotation","include","call","pos","_icon","style","setRotationAngle","angle","update","setRotationOrigin","origin"],"mappings":"AAAA,CAAC,YAAW;AACR;AACA,MAAIA,cAAc,GAAGC,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,SAAxC;AACA,MAAIC,YAAY,GAAGJ,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBG,OAAtC;AAEA,MAAIC,KAAK,GAAIN,CAAC,CAACO,OAAF,CAAUC,SAAV,KAAwB,aAArC;AAEAR,EAAAA,CAAC,CAACC,MAAF,CAASQ,WAAT,CAAqB,YAAY;AAC7B,QAAIC,WAAW,GAAG,KAAKC,OAAL,CAAaC,IAAb,IAAqB,KAAKD,OAAL,CAAaC,IAAb,CAAkBD,OAAzD;AACA,QAAIE,UAAU,GAAGH,WAAW,IAAI,KAAKC,OAAL,CAAaC,IAAb,CAAkBD,OAAlB,CAA0BE,UAA1D;;AACA,QAAIA,UAAJ,EAAgB;AACZA,MAAAA,UAAU,GAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,KAAhB,GAAwBA,UAAU,CAAC,CAAD,CAAlC,GAAwC,IAAtD;AACH;;AACD,SAAKF,OAAL,CAAaG,cAAb,GAA8B,KAAKH,OAAL,CAAaG,cAAb,IAA+BD,UAA/B,IAA6C,eAA3E;AACA,SAAKF,OAAL,CAAaI,aAAb,GAA6B,KAAKJ,OAAL,CAAaI,aAAb,IAA8B,CAA3D,CAP6B,CAS7B;;AACA,SAAKC,EAAL,CAAQ,MAAR,EAAgB,UAASC,CAAT,EAAY;AAAEA,MAAAA,CAAC,CAACC,MAAF,CAASC,cAAT;AAA4B,KAA1D;AACH,GAXD;AAaAnB,EAAAA,CAAC,CAACC,MAAF,CAASmB,OAAT,CAAiB;AACbjB,IAAAA,SAAS,EAAE,YAAW;AAClBJ,MAAAA,cAAc,CAACsB,IAAf,CAAoB,IAApB;AACH,KAHY;AAKbhB,IAAAA,OAAO,EAAE,UAAUiB,GAAV,EAAe;AACpBlB,MAAAA,YAAY,CAACiB,IAAb,CAAkB,IAAlB,EAAwBC,GAAxB;;AACA,WAAKH,cAAL;AACH,KARY;AAUbA,IAAAA,cAAc,EAAE,YAAY;AACxB,UAAG,KAAKR,OAAL,CAAaI,aAAhB,EAA+B;AAC3B,aAAKQ,KAAL,CAAWC,KAAX,CAAiBxB,CAAC,CAACO,OAAF,CAAUC,SAAV,GAAoB,QAArC,IAAiD,KAAKG,OAAL,CAAaG,cAA9D;;AAEA,YAAGR,KAAH,EAAU;AACN;AACA,eAAKiB,KAAL,CAAWC,KAAX,CAAiBxB,CAAC,CAACO,OAAF,CAAUC,SAA3B,IAAwC,YAAY,KAAKG,OAAL,CAAaI,aAAzB,GAAyC,MAAjF;AACH,SAHD,MAGO;AACH;AACA,eAAKQ,KAAL,CAAWC,KAAX,CAAiBxB,CAAC,CAACO,OAAF,CAAUC,SAA3B,KAAyC,cAAc,KAAKG,OAAL,CAAaI,aAA3B,GAA2C,MAApF;AACH;AACJ;AACJ,KAtBY;AAwBbU,IAAAA,gBAAgB,EAAE,UAASC,KAAT,EAAgB;AAC9B,WAAKf,OAAL,CAAaI,aAAb,GAA6BW,KAA7B;AACA,WAAKC,MAAL;AACA,aAAO,IAAP;AACH,KA5BY;AA8BbC,IAAAA,iBAAiB,EAAE,UAASC,MAAT,EAAiB;AAChC,WAAKlB,OAAL,CAAaG,cAAb,GAA8Be,MAA9B;AACA,WAAKF,MAAL;AACA,aAAO,IAAP;AACH;AAlCY,GAAjB;AAoCH,CAxDD","sourcesContent":["(function() {\r\n    // save these original methods before they are overwritten\r\n    var proto_initIcon = L.Marker.prototype._initIcon;\r\n    var proto_setPos = L.Marker.prototype._setPos;\r\n\r\n    var oldIE = (L.DomUtil.TRANSFORM === 'msTransform');\r\n\r\n    L.Marker.addInitHook(function () {\r\n        var iconOptions = this.options.icon && this.options.icon.options;\r\n        var iconAnchor = iconOptions && this.options.icon.options.iconAnchor;\r\n        if (iconAnchor) {\r\n            iconAnchor = (iconAnchor[0] + 'px ' + iconAnchor[1] + 'px');\r\n        }\r\n        this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || 'center bottom' ;\r\n        this.options.rotationAngle = this.options.rotationAngle || 0;\r\n\r\n        // Ensure marker keeps rotated during dragging\r\n        this.on('drag', function(e) { e.target._applyRotation(); });\r\n    });\r\n\r\n    L.Marker.include({\r\n        _initIcon: function() {\r\n            proto_initIcon.call(this);\r\n        },\r\n\r\n        _setPos: function (pos) {\r\n            proto_setPos.call(this, pos);\r\n            this._applyRotation();\r\n        },\r\n\r\n        _applyRotation: function () {\r\n            if(this.options.rotationAngle) {\r\n                this._icon.style[L.DomUtil.TRANSFORM+'Origin'] = this.options.rotationOrigin;\r\n\r\n                if(oldIE) {\r\n                    // for IE 9, use the 2D rotation\r\n                    this._icon.style[L.DomUtil.TRANSFORM] = 'rotate(' + this.options.rotationAngle + 'deg)';\r\n                } else {\r\n                    // for modern browsers, prefer the 3D accelerated version\r\n                    this._icon.style[L.DomUtil.TRANSFORM] += ' rotateZ(' + this.options.rotationAngle + 'deg)';\r\n                }\r\n            }\r\n        },\r\n\r\n        setRotationAngle: function(angle) {\r\n            this.options.rotationAngle = angle;\r\n            this.update();\r\n            return this;\r\n        },\r\n\r\n        setRotationOrigin: function(origin) {\r\n            this.options.rotationOrigin = origin;\r\n            this.update();\r\n            return this;\r\n        }\r\n    });\r\n})();\r\n"]},"metadata":{},"sourceType":"script"}