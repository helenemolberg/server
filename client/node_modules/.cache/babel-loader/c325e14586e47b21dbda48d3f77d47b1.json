{"ast":null,"code":"/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === 'function' && define.amd) {\n    define(['leaflet'], factory); // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === 'object') {\n    if (typeof window !== 'undefined' && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require('leaflet'));\n    }\n  } // attach your plugin to the global 'L' variable\n\n\n  if (typeof window !== 'undefined' && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  var LDomUtilApplyClassesMethod = function (method, element, classNames) {\n    classNames = classNames.split(' ');\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n\n  var addClasses = function (el, names) {\n    LDomUtilApplyClassesMethod('addClass', el, names);\n  };\n\n  var removeClasses = function (el, names) {\n    LDomUtilApplyClassesMethod('removeClass', el, names);\n  };\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n\n\n  var LocationMarker = L.Marker.extend({\n    initialize: function (latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon: function () {\n      var opt = this.options;\n      var style = '';\n\n      if (opt.color !== undefined) {\n        style += 'stroke:' + opt.color + ';';\n      }\n\n      if (opt.weight !== undefined) {\n        style += 'stroke-width:' + opt.weight + ';';\n      }\n\n      if (opt.fillColor !== undefined) {\n        style += 'fill:' + opt.fillColor + ';';\n      }\n\n      if (opt.fillOpacity !== undefined) {\n        style += 'fill-opacity:' + opt.fillOpacity + ';';\n      }\n\n      if (opt.opacity !== undefined) {\n        style += 'opacity:' + opt.opacity + ';';\n      }\n\n      var icon = this._getIconSVG(opt, style);\n\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n      this.setIcon(this._locationIcon);\n    },\n\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG: function (options, style) {\n      var r = options.radius;\n      var w = options.weight;\n      var s = r + w;\n      var s2 = s * 2;\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + s2 + '\" height=\"' + s2 + '\" version=\"1.1\" viewBox=\"-' + s + ' -' + s + ' ' + s2 + ' ' + s2 + '\">' + '<circle r=\"' + r + '\" style=\"' + style + '\" />' + '</svg>';\n      return {\n        className: 'leaflet-control-locate-location',\n        svg: svg,\n        w: s2,\n        h: s2\n      };\n    },\n    setStyle: function (style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n  var CompassMarker = LocationMarker.extend({\n    initialize: function (latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n    setHeading: function (heading) {\n      this._heading = heading;\n    },\n\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG: function (options, style) {\n      var r = options.radius;\n      var w = options.width + options.weight;\n      var h = (r + options.depth + options.weight) * 2;\n      var path = 'M0,0 l' + options.width / 2 + ',' + options.depth + ' l-' + w + ',0 z';\n      var svgstyle = 'transform: rotate(' + this._heading + 'deg)';\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + w + '\" height=\"' + h + '\" version=\"1.1\" viewBox=\"-' + w / 2 + ' 0 ' + w + ' ' + h + '\" style=\"' + svgstyle + '\">' + '<path d=\"' + path + '\" style=\"' + style + '\" />' + '</svg>';\n      return {\n        className: 'leaflet-control-locate-heading',\n        svg: svg,\n        w: w,\n        h: h\n      };\n    }\n  });\n  var LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: 'topleft',\n\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: 'untilPanOrZoom',\n\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds: function (locationEvent) {\n        return locationEvent.bounds;\n      },\n\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: 'stop',\n\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: 'setView',\n\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: 'inView'\n      },\n\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: 'leaflet-control-locate-circle',\n        color: '#136AEC',\n        fillColor: '#136AEC',\n        fillOpacity: 0.15,\n        weight: 0\n      },\n\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: 'leaflet-control-locate-marker',\n        color: '#fff',\n        fillColor: '#2A93EE',\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n\n      /** Compass */\n      compassStyle: {\n        fillColor: '#2A93EE',\n        fillOpacity: 1,\n        weight: 0,\n        color: '#fff',\n        opacity: 1,\n        radius: 9,\n        // How far is the arrow is from the center of of the marker\n        width: 9,\n        // Width of the arrow\n        depth: 6 // Length of the arrow\n\n      },\n\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {// color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: 'fa fa-map-marker',\n      iconLoading: 'fa fa-spinner fa-spin',\n\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: 'span',\n\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n\n      /** Use metric units. */\n      metric: true,\n\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback: function (container, options) {\n        var link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\n        link.title = options.strings.title;\n        link.role = 'button';\n        link.href = '#';\n        var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n        return {\n          link: link,\n          icon: icon\n        };\n      },\n\n      /** This event is called in case of any location error that is not a time out error. */\n      onLocationError: function (err, control) {\n        alert(err.message);\n      },\n\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds: function (control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true,\n        // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n\n      }\n    },\n    initialize: function (options) {\n      // set default options if nothing is set (merge one step deep)\n      for (var i in options) {\n        if (typeof this.options[i] === 'object') {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      } // extend the follow marker style and circle from the normal style\n\n\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd: function (map) {\n      var container = L.DomUtil.create('div', 'leaflet-control-locate leaflet-bar leaflet-control');\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n\n      this._layer.addTo(map);\n\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n      var linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n      L.DomEvent.on(this._link, \"click\", function (ev) {\n        L.DomEvent.stopPropagation(ev);\n        L.DomEvent.preventDefault(ev);\n\n        this._onClick();\n      }, this).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n      this._resetVariables();\n\n      this._map.on('unload', this._unload, this);\n\n      return container;\n    },\n\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick: function () {\n      this._justClicked = true;\n\n      var wasFollowing = this._isFollowing();\n\n      this._userPanned = false;\n      this._userZoomed = false;\n\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        var behaviors = this.options.clickBehavior;\n        var behavior = behaviors.outOfView;\n\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        } // Allow inheriting from another behavior\n\n\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n\n        switch (behavior) {\n          case 'setView':\n            this.setView();\n            break;\n\n          case 'stop':\n            this.stop();\n\n            if (this.options.returnToPrevBounds) {\n              var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n\n        this.start();\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start: function () {\n      this._activate();\n\n      if (this._event) {\n        this._drawMarker(this._map); // if we already have a location but the user clicked on the control\n\n\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop: function () {\n      this._deactivate();\n\n      this._cleanClasses();\n\n      this._resetVariables();\n\n      this._removeMarker();\n    },\n\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing: function () {\n      this._userPanned = true;\n\n      this._updateContainerStyle();\n\n      this._drawMarker();\n    },\n\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate: function () {\n      if (!this._active) {\n        this._map.locate(this.options.locateOptions);\n\n        this._map.fire('locateactivate', this);\n\n        this._active = true; // bind event listeners\n\n        this._map.on('locationfound', this._onLocationFound, this);\n\n        this._map.on('locationerror', this._onLocationError, this);\n\n        this._map.on('dragstart', this._onDrag, this);\n\n        this._map.on('zoomstart', this._onZoom, this);\n\n        this._map.on('zoomend', this._onZoomEnd, this);\n\n        if (this.options.showCompass) {\n          var oriAbs = ('ondeviceorientationabsolute' in window);\n\n          if (oriAbs || 'ondeviceorientation' in window) {\n            var _this = this;\n\n            var deviceorientation = function () {\n              L.DomEvent.on(window, oriAbs ? 'deviceorientationabsolute' : 'deviceorientation', _this._onDeviceOrientation, _this);\n            };\n\n            if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === 'function') {\n              DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n                if (permissionState === 'granted') {\n                  deviceorientation();\n                }\n              });\n            } else {\n              deviceorientation();\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate: function () {\n      this._map.stopLocate();\n\n      this._map.fire('locatedeactivate', this);\n\n      this._active = false;\n\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      } // unbind event listeners\n\n\n      this._map.off('locationfound', this._onLocationFound, this);\n\n      this._map.off('locationerror', this._onLocationError, this);\n\n      this._map.off('dragstart', this._onDrag, this);\n\n      this._map.off('zoomstart', this._onZoom, this);\n\n      this._map.off('zoomend', this._onZoomEnd, this);\n\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n\n        if ('ondeviceorientationabsolute' in window) {\n          L.DomEvent.off(window, 'deviceorientationabsolute', this._onDeviceOrientation, this);\n        } else if ('ondeviceorientation' in window) {\n          L.DomEvent.off(window, 'deviceorientation', this._onDeviceOrientation, this);\n        }\n      }\n    },\n\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView: function () {\n      this._drawMarker();\n\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds; // Ignore zoom events while setting the viewport as these would stop following\n\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    _drawCompass: function () {\n      if (!this._event) {\n        return;\n      }\n\n      var latlng = this._event.latlng;\n\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n\n          this._compass.setHeading(this._compassHeading); // If the compassClass can be updated with setStyle, update it.\n\n\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        } // \n\n      }\n\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n\n        this._compass = null;\n      }\n    },\n\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker: function () {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n\n      var radius = this._event.accuracy;\n      var latlng = this._event.latlng; // circle with the radius of the location's accuracy\n\n      if (this.options.drawCircle) {\n        var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n\n      var distance, unit;\n\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      } // small inner marker\n\n\n      if (this.options.drawMarker) {\n        var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng); // If the markerClass can be updated with setStyle, update it.\n\n\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n\n      this._drawCompass();\n\n      var t = this.options.strings.popup;\n\n      function getPopupText() {\n        if (typeof t === 'string') {\n          return L.Util.template(t, {\n            distance: distance,\n            unit: unit\n          });\n        } else if (typeof t === 'function') {\n          return t({\n            distance: distance,\n            unit: unit\n          });\n        } else {\n          return t;\n        }\n      }\n\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker: function () {\n      this._layer.clearLayers();\n\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload: function () {\n      this.stop();\n\n      this._map.off('unload', this._unload, this);\n    },\n\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading: function (angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration: function () {\n      this._setCompassHeading();\n    },\n\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation: function (e) {\n      if (!this._active) {\n        return;\n      }\n\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError: function (err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound: function (e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n\n      this._event = e;\n\n      this._drawMarker();\n\n      this._updateContainerStyle();\n\n      switch (this.options.setView) {\n        case 'once':\n          if (this._justClicked) {\n            this.setView();\n          }\n\n          break;\n\n        case 'untilPan':\n          if (!this._userPanned) {\n            this.setView();\n          }\n\n          break;\n\n        case 'untilPanOrZoom':\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n\n          break;\n\n        case 'always':\n          this.setView();\n          break;\n\n        case false:\n          // don't set the view\n          break;\n      }\n\n      this._justClicked = false;\n    },\n\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag: function () {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n\n        this._updateContainerStyle();\n\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom: function () {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n\n        this._updateContainerStyle();\n\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd: function () {\n      if (this._event) {\n        this._drawCompass();\n      }\n\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n\n          this._updateContainerStyle();\n\n          this._drawMarker();\n        }\n      }\n    },\n\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing: function () {\n      if (!this._active) {\n        return false;\n      }\n\n      if (this.options.setView === 'always') {\n        return true;\n      } else if (this.options.setView === 'untilPan') {\n        return !this._userPanned;\n      } else if (this.options.setView === 'untilPanOrZoom') {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds: function () {\n      if (this._event === undefined) {\n        return false;\n      }\n\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle: function () {\n      if (!this._container) {\n        return;\n      }\n\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses('requesting');\n      } else if (this._isFollowing()) {\n        this._setClasses('following');\n      } else if (this._active) {\n        this._setClasses('active');\n      } else {\n        this._cleanClasses();\n      }\n    },\n\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses: function (state) {\n      if (state == 'requesting') {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == 'active') {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == 'following') {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses: function () {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables: function () {\n      // whether locate is active or not\n      this._active = false; // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n\n      this._justClicked = false; // true if the user has panned the map after clicking the control\n\n      this._userPanned = false; // true if the user has zoomed the map after clicking the control\n\n      this._userZoomed = false;\n    }\n  });\n\n  L.control.locate = function (options) {\n    return new L.Control.Locate(options);\n  };\n\n  return LocateControl;\n}, window);","map":{"version":3,"sources":["/Users/helenemolberg/mobil-grensesnitt/node_modules/leaflet.locatecontrol/src/L.Control.Locate.js"],"names":["factory","window","define","amd","exports","L","module","require","Control","Locate","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","DomUtil","call","addClasses","el","names","removeClasses","LocationMarker","Marker","extend","initialize","latlng","options","Util","setOptions","_latlng","createIcon","opt","style","color","undefined","weight","fillColor","fillOpacity","opacity","icon","_getIconSVG","_locationIcon","divIcon","html","svg","iconSize","w","h","setIcon","r","radius","s","s2","setStyle","CompassMarker","heading","_heading","setHeading","width","depth","path","svgstyle","LocateControl","position","layer","setView","keepCurrentZoomLevel","initialZoomLevel","getLocationBounds","locationEvent","bounds","flyTo","clickBehavior","inView","outOfView","inViewNotFollowing","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","showCompass","markerClass","compassClass","circleStyle","markerStyle","compassStyle","followCircleStyle","followMarkerStyle","followCompassStyle","iconLoading","iconElementTag","circlePadding","metric","createButtonCallback","container","link","create","title","strings","role","href","onLocationError","err","control","alert","message","onLocationOutsideMapBounds","stop","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","maxZoom","Infinity","watch","i","onAdd","map","_container","_map","_layer","LayerGroup","addTo","_event","_compassHeading","_prevBounds","linkAndIcon","_link","_icon","DomEvent","on","ev","stopPropagation","preventDefault","_onClick","_resetVariables","_unload","_justClicked","wasFollowing","_isFollowing","_userPanned","_userZoomed","_active","behaviors","behavior","getBounds","contains","f","flyToBounds","fitBounds","bind","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","stopFollowing","locate","fire","_onLocationFound","_onLocationError","_onDrag","_onZoom","_onZoomEnd","oriAbs","_this","deviceorientation","_onDeviceOrientation","DeviceOrientationEvent","requestPermission","then","permissionState","stopLocate","off","_isOutsideMapBounds","latitude","longitude","panTo","_ignoreEvent","padding","requestAnimFrame","_drawCompass","cStyle","_compass","setLatLng","removeFrom","accuracy","_circle","circle","setRadius","distance","unit","toFixed","mStyle","_marker","t","getPopupText","template","bindPopup","_popup","clearLayers","_setCompassHeading","angle","isNaN","parseFloat","isFinite","Math","round","_onCompassNeedsCalibration","e","webkitCompassHeading","absolute","alpha","code","lat","lng","pad","getLatLng","maxBounds","_setClasses","state","removeClass"],"mappings":"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","sourcesContent":["/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n     // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n     // for details on how to structure a leaflet plugin.\n\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        if (typeof window !== 'undefined' && window.L) {\n            module.exports = factory(L);\n        } else {\n            module.exports = factory(require('leaflet'));\n        }\n    }\n\n    // attach your plugin to the global 'L' variable\n    if (typeof window !== 'undefined' && window.L){\n        window.L.Control.Locate = factory(L);\n    }\n} (function (L) {\n    var LDomUtilApplyClassesMethod = function(method, element, classNames) {\n        classNames = classNames.split(' ');\n        classNames.forEach(function(className) {\n            L.DomUtil[method].call(this, element, className);\n        });\n    };\n\n    var addClasses = function(el, names) { LDomUtilApplyClassesMethod('addClass', el, names); };\n    var removeClasses = function(el, names) { LDomUtilApplyClassesMethod('removeClass', el, names); };\n\n    /**\n     * Compatible with L.Circle but a true marker instead of a path\n     */\n    var LocationMarker = L.Marker.extend({\n        initialize: function (latlng, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this.createIcon();\n        },\n\n        /**\n         * Create a styled circle location marker\n         */\n        createIcon: function() {\n            var opt = this.options;\n\n            var style = '';\n\n            if (opt.color !== undefined) {\n                style += 'stroke:'+opt.color+';';\n            }\n            if (opt.weight !== undefined) {\n                style += 'stroke-width:'+opt.weight+';';\n            }\n            if (opt.fillColor !== undefined) {\n                style += 'fill:'+opt.fillColor+';';\n            }\n            if (opt.fillOpacity !== undefined) {\n                style += 'fill-opacity:'+opt.fillOpacity+';';\n            }\n            if (opt.opacity !== undefined) {\n                style += 'opacity:'+opt.opacity+';';\n            }\n\n            var icon = this._getIconSVG(opt, style);\n\n            this._locationIcon = L.divIcon({\n                className: icon.className,\n                html: icon.svg,\n                iconSize: [icon.w,icon.h],\n            });\n\n            this.setIcon(this._locationIcon);\n        },\n\n        /**\n         * Return the raw svg for the shape\n         *\n         * Split so can be easily overridden\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = options.weight;\n            var s = r + w;\n            var s2 = s * 2;\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+s2+'\" height=\"'+s2+'\" version=\"1.1\" viewBox=\"-'+s+' -'+s+' '+s2+' '+s2+'\">' +\n            '<circle r=\"'+r+'\" style=\"'+style+'\" />' +\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-location',\n                svg: svg,\n                w: s2,\n                h: s2\n            };\n        },\n\n        setStyle: function(style) {\n            L.Util.setOptions(this, style);\n            this.createIcon();\n        }\n    });\n\n    var CompassMarker = LocationMarker.extend({\n        initialize: function (latlng, heading, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this._heading = heading;\n            this.createIcon();\n        },\n\n        setHeading: function(heading) {\n            this._heading = heading;\n        },\n\n        /**\n         * Create a styled arrow compass marker\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = (options.width + options.weight);\n            var h = (r+options.depth + options.weight)*2;\n            var path = 'M0,0 l'+(options.width/2)+','+options.depth+' l-'+(w)+',0 z';\n            var svgstyle = 'transform: rotate('+this._heading+'deg)';\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+(w)+'\" height=\"'+h+'\" version=\"1.1\" viewBox=\"-'+(w/2)+' 0 '+w+' '+h+'\" style=\"'+svgstyle+'\">'+\n            '<path d=\"'+path+'\" style=\"'+style+'\" />'+\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-heading',\n                svg: svg,\n                w: w,\n                h: h\n            };\n        },\n    });\n\n\n    var LocateControl = L.Control.extend({\n        options: {\n            /** Position of the control */\n            position: 'topleft',\n            /** The layer that the user's location should be drawn on. By default creates a new layer. */\n            layer: undefined,\n            /**\n             * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n             * While the map is following the user's location, the control is in the `following` state,\n             * which changes the style of the control and the circle marker.\n             *\n             * Possible values:\n             *  - false: never updates the map view when location changes.\n             *  - 'once': set the view when the location is first determined\n             *  - 'always': always updates the map view when location changes.\n             *              The map view follows the user's location.\n             *  - 'untilPan': like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             */\n            setView: 'untilPanOrZoom',\n            /** Keep the current map zoom level when setting the view and only pan. */\n            keepCurrentZoomLevel: false,\n\t    /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n\t    initialZoomLevel: false,\n            /**\n             * This callback can be used to override the viewport tracking\n             * This function should return a LatLngBounds object.\n             *\n             * For example to extend the viewport to ensure that a particular LatLng is visible:\n             *\n             * getLocationBounds: function(locationEvent) {\n             *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n             * },\n             */\n            getLocationBounds: function (locationEvent) {\n                return locationEvent.bounds;\n            },\n            /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n            flyTo: false,\n            /**\n             * The user location can be inside and outside the current view when the user clicks on the\n             * control that is already active. Both cases can be configures separately.\n             * Possible values are:\n             *  - 'setView': zoom and pan to the current location\n             *  - 'stop': stop locating and remove the location marker\n             */\n            clickBehavior: {\n                /** What should happen if the user clicks on the control while the location is within the current view. */\n                inView: 'stop',\n                /** What should happen if the user clicks on the control while the location is outside the current view. */\n                outOfView: 'setView',\n                /**\n                 * What should happen if the user clicks on the control while the location is within the current view\n                 * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n                 */\n                inViewNotFollowing: 'inView',\n            },\n            /**\n             * If set, save the map bounds just before centering to the user's\n             * location. When control is disabled, set the view back to the\n             * bounds that were saved.\n             */\n            returnToPrevBounds: false,\n            /**\n             * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n             * until the locate API returns a new location before they see where they are again.\n             */\n            cacheLocation: true,\n            /** If set, a circle that shows the location accuracy is drawn. */\n            drawCircle: true,\n            /** If set, the marker at the users' location is drawn. */\n            drawMarker: true,\n            /** If set and supported then show the compass heading */\n            showCompass: true,\n            /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n            markerClass: LocationMarker,\n            /** The class us be used to create the compass bearing arrow */\n            compassClass: CompassMarker,\n            /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n            circleStyle: {\n                className:   'leaflet-control-locate-circle',\n                color:       '#136AEC',\n                fillColor:   '#136AEC',\n                fillOpacity: 0.15,\n                weight:      0\n            },\n            /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n            markerStyle: {\n                className:   'leaflet-control-locate-marker',\n                color:       '#fff',\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      3,\n                opacity:     1,\n                radius:      9\n            },\n            /** Compass */\n            compassStyle: {\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      0,\n                color:       '#fff',\n                opacity:     1,\n                radius:      9, // How far is the arrow is from the center of of the marker\n                width:       9, // Width of the arrow\n                depth:       6  // Length of the arrow\n            },\n            /**\n             * Changes to accuracy circle and inner marker while following.\n             * It is only necessary to provide the properties that should change.\n             */\n            followCircleStyle: {},\n            followMarkerStyle: {\n                // color: '#FFA500',\n                // fillColor: '#FFB000'\n            },\n            followCompassStyle: {},\n            /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n            icon: 'fa fa-map-marker',\n            iconLoading: 'fa fa-spinner fa-spin',\n            /** The element to be created for icons. For example span or i */\n            iconElementTag: 'span',\n            /** Padding around the accuracy circle. */\n            circlePadding: [0, 0],\n            /** Use metric units. */\n            metric: true,\n            /**\n             * This callback can be used in case you would like to override button creation behavior.\n             * This is useful for DOM manipulation frameworks such as angular etc.\n             * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n             */\n            createButtonCallback: function (container, options) {\n                var link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\n                link.title = options.strings.title;\n                link.role = 'button';\n                link.href = '#';\n                var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n                return { link: link, icon: icon };\n            },\n            /** This event is called in case of any location error that is not a time out error. */\n            onLocationError: function(err, control) {\n                alert(err.message);\n            },\n            /**\n             * This event is called when the user's location is outside the bounds set on the map.\n             * The event is called repeatedly when the location changes.\n             */\n            onLocationOutsideMapBounds: function(control) {\n                control.stop();\n                alert(control.options.strings.outsideMapBoundsMsg);\n            },\n            /** Display a pop-up when the user click on the inner marker. */\n            showPopup: true,\n            strings: {\n                title: \"Show me where I am\",\n                metersUnit: \"meters\",\n                feetUnit: \"feet\",\n                popup: \"You are within {distance} {unit} from this point\",\n                outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n            },\n            /** The default options passed to leaflets locate method. */\n            locateOptions: {\n                maxZoom: Infinity,\n                watch: true,  // if you overwrite this, visualization cannot be updated\n                setView: false // have to set this to false because we have to\n                               // do setView manually\n            }\n        },\n\n        initialize: function (options) {\n            // set default options if nothing is set (merge one step deep)\n            for (var i in options) {\n                if (typeof this.options[i] === 'object') {\n                    L.extend(this.options[i], options[i]);\n                } else {\n                    this.options[i] = options[i];\n                }\n            }\n\n            // extend the follow marker style and circle from the normal style\n            this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n            this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n            this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n        },\n\n        /**\n         * Add control to map. Returns the container for the control.\n         */\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div',\n                'leaflet-control-locate leaflet-bar leaflet-control');\n            this._container = container;\n            this._map = map;\n            this._layer = this.options.layer || new L.LayerGroup();\n            this._layer.addTo(map);\n            this._event = undefined;\n            this._compassHeading = null;\n            this._prevBounds = null;\n\n            var linkAndIcon = this.options.createButtonCallback(container, this.options);\n            this._link = linkAndIcon.link;\n            this._icon = linkAndIcon.icon;\n\n            L.DomEvent.on(\n              this._link,\n              \"click\",\n              function (ev) {\n                L.DomEvent.stopPropagation(ev);\n                L.DomEvent.preventDefault(ev);\n                this._onClick();\n              },\n              this\n            ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n            this._resetVariables();\n\n            this._map.on('unload', this._unload, this);\n\n            return container;\n        },\n\n        /**\n         * This method is called when the user clicks on the control.\n         */\n        _onClick: function() {\n            this._justClicked = true;\n            var wasFollowing =  this._isFollowing();\n            this._userPanned = false;\n            this._userZoomed = false;\n\n            if (this._active && !this._event) {\n                // click while requesting\n                this.stop();\n            } else if (this._active) {\n                var behaviors = this.options.clickBehavior;\n                var behavior = behaviors.outOfView;\n                if (this._map.getBounds().contains(this._event.latlng)) {\n                    behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n                }\n\n                // Allow inheriting from another behavior\n                if (behaviors[behavior]) {\n                    behavior = behaviors[behavior];\n                }\n\n                switch (behavior) {\n                    case 'setView':\n                        this.setView();\n                        break;\n                    case 'stop':\n                        this.stop();\n                        if (this.options.returnToPrevBounds) {\n                            var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                            f.bind(this._map)(this._prevBounds);\n                        }\n                        break;\n                }\n            } else {\n                if (this.options.returnToPrevBounds) {\n                  this._prevBounds = this._map.getBounds();\n                }\n                this.start();\n            }\n\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Starts the plugin:\n         * - activates the engine\n         * - draws the marker (if coordinates available)\n         */\n        start: function() {\n            this._activate();\n\n            if (this._event) {\n                this._drawMarker(this._map);\n\n                // if we already have a location but the user clicked on the control\n                if (this.options.setView) {\n                    this.setView();\n                }\n            }\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Stops the plugin:\n         * - deactivates the engine\n         * - reinitializes the button\n         * - removes the marker\n         */\n        stop: function() {\n            this._deactivate();\n\n            this._cleanClasses();\n            this._resetVariables();\n\n            this._removeMarker();\n        },\n\n        /**\n         * Keep the control active but stop following the location\n         */\n        stopFollowing: function() {\n            this._userPanned = true;\n            this._updateContainerStyle();\n            this._drawMarker();\n        },\n\n        /**\n         * This method launches the location engine.\n         * It is called before the marker is updated,\n         * event if it does not mean that the event will be ready.\n         *\n         * Override it if you want to add more functionalities.\n         * It should set the this._active to true and do nothing if\n         * this._active is true.\n         */\n        _activate: function() {\n            if (!this._active) {\n                this._map.locate(this.options.locateOptions);\n                this._map.fire('locateactivate', this);\n                this._active = true;\n\n                // bind event listeners\n                this._map.on('locationfound', this._onLocationFound, this);\n                this._map.on('locationerror', this._onLocationError, this);\n                this._map.on('dragstart', this._onDrag, this);\n                this._map.on('zoomstart', this._onZoom, this);\n                this._map.on('zoomend', this._onZoomEnd, this);\n                if (this.options.showCompass) {\n                    var oriAbs = 'ondeviceorientationabsolute' in window;\n                    if (oriAbs || ('ondeviceorientation' in window)) {\n                        var _this = this;\n                        var deviceorientation = function () {\n                            L.DomEvent.on(window, oriAbs ? 'deviceorientationabsolute' : 'deviceorientation', _this._onDeviceOrientation, _this);\n                        };\n                        if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === 'function') {\n                            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n                                if (permissionState === 'granted') {\n                                    deviceorientation();\n                                }\n                            });\n                        } else {\n                            deviceorientation();\n                        }\n                    }\n                }\n            }\n        },\n\n        /**\n         * Called to stop the location engine.\n         *\n         * Override it to shutdown any functionalities you added on start.\n         */\n        _deactivate: function() {\n            this._map.stopLocate();\n            this._map.fire('locatedeactivate', this);\n            this._active = false;\n\n            if (!this.options.cacheLocation) {\n                this._event = undefined;\n            }\n\n            // unbind event listeners\n            this._map.off('locationfound', this._onLocationFound, this);\n            this._map.off('locationerror', this._onLocationError, this);\n            this._map.off('dragstart', this._onDrag, this);\n            this._map.off('zoomstart', this._onZoom, this);\n            this._map.off('zoomend', this._onZoomEnd, this);\n            if (this.options.showCompass) {\n                this._compassHeading = null;\n                if ('ondeviceorientationabsolute' in window) {\n                    L.DomEvent.off(window, 'deviceorientationabsolute', this._onDeviceOrientation, this);\n                } else if ('ondeviceorientation' in window) {\n                    L.DomEvent.off(window, 'deviceorientation', this._onDeviceOrientation, this);\n                }\n            }\n        },\n\n        /**\n         * Zoom (unless we should keep the zoom level) and an to the current view.\n         */\n        setView: function() {\n            this._drawMarker();\n            if (this._isOutsideMapBounds()) {\n                this._event = undefined;  // clear the current location so we can get back into the bounds\n                this.options.onLocationOutsideMapBounds(this);\n            } else {\n\t\tif (this._justClicked && this.options.initialZoomLevel !== false) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n\t\t} else\n                if (this.options.keepCurrentZoomLevel) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude]);\n                } else {\n                    var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                    // Ignore zoom events while setting the viewport as these would stop following\n                    this._ignoreEvent = true;\n                    f.bind(this._map)(this.options.getLocationBounds(this._event), {\n                        padding: this.options.circlePadding,\n                        maxZoom: this.options.locateOptions.maxZoom\n                    });\n                    L.Util.requestAnimFrame(function(){\n                        // Wait until after the next animFrame because the flyTo can be async\n                        this._ignoreEvent = false;\n                    }, this);\n\n                }\n            }\n        },\n\n        /**\n         *\n         */\n        _drawCompass: function() {\n            if (!this._event) {\n                return;\n            }\n\n            var latlng = this._event.latlng;\n\n            if (this.options.showCompass && latlng && this._compassHeading !== null) {\n                var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n                if (!this._compass) {\n                    this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n                } else {\n                    this._compass.setLatLng(latlng);\n                    this._compass.setHeading(this._compassHeading);\n                    // If the compassClass can be updated with setStyle, update it.\n                    if (this._compass.setStyle) {\n                        this._compass.setStyle(cStyle);\n                    }\n                }\n                // \n            }\n            if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n                this._compass.removeFrom(this._layer);\n                this._compass = null;\n            }\n        },\n\n        /**\n         * Draw the marker and accuracy circle on the map.\n         *\n         * Uses the event retrieved from onLocationFound from the map.\n         */\n        _drawMarker: function() {\n            if (this._event.accuracy === undefined) {\n                this._event.accuracy = 0;\n            }\n\n            var radius = this._event.accuracy;\n            var latlng = this._event.latlng;\n\n            // circle with the radius of the location's accuracy\n            if (this.options.drawCircle) {\n                var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n                if (!this._circle) {\n                    this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n                } else {\n                    this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n                }\n            }\n\n            var distance, unit;\n            if (this.options.metric) {\n                distance = radius.toFixed(0);\n                unit =  this.options.strings.metersUnit;\n            } else {\n                distance = (radius * 3.2808399).toFixed(0);\n                unit = this.options.strings.feetUnit;\n            }\n\n            // small inner marker\n            if (this.options.drawMarker) {\n                var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n                if (!this._marker) {\n                    this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n                } else {\n                    this._marker.setLatLng(latlng);\n                    // If the markerClass can be updated with setStyle, update it.\n                    if (this._marker.setStyle) {\n                        this._marker.setStyle(mStyle);\n                    }\n                }\n            }\n\n            this._drawCompass();\n\n            var t = this.options.strings.popup;\n            function getPopupText() {\n                if (typeof t === 'string') {\n                    return L.Util.template(t, {distance: distance, unit: unit});\n                } else if (typeof t === 'function') {\n                    return t({distance: distance, unit: unit});\n                } else {\n                    return t;\n                }\n            }\n            if (this.options.showPopup && t && this._marker) {\n                this._marker\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n            if (this.options.showPopup && t && this._compass) {\n                this._compass\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n        },\n\n        /**\n         * Remove the marker from map.\n         */\n        _removeMarker: function() {\n            this._layer.clearLayers();\n            this._marker = undefined;\n            this._circle = undefined;\n        },\n\n        /**\n         * Unload the plugin and all event listeners.\n         * Kind of the opposite of onAdd.\n         */\n        _unload: function() {\n            this.stop();\n            this._map.off('unload', this._unload, this);\n        },\n\n        /**\n         * Sets the compass heading\n         */\n        _setCompassHeading: function(angle) {\n            if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n                angle = Math.round(angle);\n\n                this._compassHeading = angle;\n                L.Util.requestAnimFrame(this._drawCompass, this);\n            } else {\n                this._compassHeading = null;\n            }\n        },\n\n        /**\n         * If the compass fails calibration just fail safely and remove the compass\n         */\n        _onCompassNeedsCalibration: function() {\n            this._setCompassHeading();\n        },\n\n        /**\n         * Process and normalise compass events\n         */\n        _onDeviceOrientation: function(e) {\n            if (!this._active) {\n                return;\n            }\n\n            if (e.webkitCompassHeading) {\n                // iOS\n                this._setCompassHeading(e.webkitCompassHeading);\n            } else if (e.absolute && e.alpha) {\n                // Android\n                this._setCompassHeading(360 - e.alpha)\n            }\n        },\n\n        /**\n         * Calls deactivate and dispatches an error.\n         */\n        _onLocationError: function(err) {\n            // ignore time out error if the location is watched\n            if (err.code == 3 && this.options.locateOptions.watch) {\n                return;\n            }\n\n            this.stop();\n            this.options.onLocationError(err, this);\n        },\n\n        /**\n         * Stores the received event and updates the marker.\n         */\n        _onLocationFound: function(e) {\n            // no need to do anything if the location has not changed\n            if (this._event &&\n                (this._event.latlng.lat === e.latlng.lat &&\n                 this._event.latlng.lng === e.latlng.lng &&\n                     this._event.accuracy === e.accuracy)) {\n                return;\n            }\n\n            if (!this._active) {\n                // we may have a stray event\n                return;\n            }\n\n            this._event = e;\n\n            this._drawMarker();\n            this._updateContainerStyle();\n\n            switch (this.options.setView) {\n                case 'once':\n                    if (this._justClicked) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPan':\n                    if (!this._userPanned) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPanOrZoom':\n                    if (!this._userPanned && !this._userZoomed) {\n                        this.setView();\n                    }\n                    break;\n                case 'always':\n                    this.setView();\n                    break;\n                case false:\n                    // don't set the view\n                    break;\n            }\n\n            this._justClicked = false;\n        },\n\n        /**\n         * When the user drags. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onDrag: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userPanned = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onZoom: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userZoomed = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * After a zoom ends update the compass and handle sideways zooms\n         */\n        _onZoomEnd: function() {\n            if (this._event) {\n                this._drawCompass();\n            }\n\n            if (this._event && !this._ignoreEvent) {\n                // If we have zoomed in and out and ended up sideways treat it as a pan\n                if (this._marker && !this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())) {\n                    this._userPanned = true;\n                    this._updateContainerStyle();\n                    this._drawMarker();\n                }\n            }\n        },\n\n        /**\n         * Compute whether the map is following the user location with pan and zoom.\n         */\n        _isFollowing: function() {\n            if (!this._active) {\n                return false;\n            }\n\n            if (this.options.setView === 'always') {\n                return true;\n            } else if (this.options.setView === 'untilPan') {\n                return !this._userPanned;\n            } else if (this.options.setView === 'untilPanOrZoom') {\n                return !this._userPanned && !this._userZoomed;\n            }\n        },\n\n        /**\n         * Check if location is in map bounds\n         */\n        _isOutsideMapBounds: function() {\n            if (this._event === undefined) {\n                return false;\n            }\n            return this._map.options.maxBounds &&\n                !this._map.options.maxBounds.contains(this._event.latlng);\n        },\n\n        /**\n         * Toggles button class between following and active.\n         */\n        _updateContainerStyle: function() {\n            if (!this._container) {\n                return;\n            }\n\n            if (this._active && !this._event) {\n                // active but don't have a location yet\n                this._setClasses('requesting');\n            } else if (this._isFollowing()) {\n                this._setClasses('following');\n            } else if (this._active) {\n                this._setClasses('active');\n            } else {\n                this._cleanClasses();\n            }\n        },\n\n        /**\n         * Sets the CSS classes for the state.\n         */\n        _setClasses: function(state) {\n            if (state == 'requesting') {\n                removeClasses(this._container, \"active following\");\n                addClasses(this._container, \"requesting\");\n\n                removeClasses(this._icon, this.options.icon);\n                addClasses(this._icon, this.options.iconLoading);\n            } else if (state == 'active') {\n                removeClasses(this._container, \"requesting following\");\n                addClasses(this._container, \"active\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            } else if (state == 'following') {\n                removeClasses(this._container, \"requesting\");\n                addClasses(this._container, \"active following\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            }\n        },\n\n        /**\n         * Removes all classes from button.\n         */\n        _cleanClasses: function() {\n            L.DomUtil.removeClass(this._container, \"requesting\");\n            L.DomUtil.removeClass(this._container, \"active\");\n            L.DomUtil.removeClass(this._container, \"following\");\n\n            removeClasses(this._icon, this.options.iconLoading);\n            addClasses(this._icon, this.options.icon);\n        },\n\n        /**\n         * Reinitializes state variables.\n         */\n        _resetVariables: function() {\n            // whether locate is active or not\n            this._active = false;\n\n            // true if the control was clicked for the first time\n            // we need this so we can pan and zoom once we have the location\n            this._justClicked = false;\n\n            // true if the user has panned the map after clicking the control\n            this._userPanned = false;\n\n            // true if the user has zoomed the map after clicking the control\n            this._userZoomed = false;\n        }\n    });\n\n    L.control.locate = function (options) {\n        return new L.Control.Locate(options);\n    };\n\n    return LocateControl;\n}, window));\n"]},"metadata":{},"sourceType":"script"}