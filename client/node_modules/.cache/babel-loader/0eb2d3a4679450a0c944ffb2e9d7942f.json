{"ast":null,"code":"var _jsxFileName = \"/Users/helenemolberg/mobil-grensesnitt/src/components/pages/Opplastning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport exifr from \"exifr\";\nimport './Opplastning.css'; //import { sendFile } from \"../API\";\n// Import React FilePond\n\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\"; // Register the plugins\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginFileValidateType);\n/* Må legge til resten av prosjektene og kategorier som er ønsket. \n    Til jeg finne ut hvordan man kan hente dem fra databasen inn i listen...??\n*/\n\nconst Opplastning = () => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const fileTypesAccepted = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\n  const userFile = {\n    latitude: \"\",\n    longitude: \"\",\n    GPSAltitude: \"\",\n    GPSImgDirection: \"\",\n    imageName: \"\",\n    imageType: \"\",\n    captureDate: Date\n  };\n\n  const handleSubmit = async event => {\n    //Henter svarene fra formen\n    const formData = new FormData(event.target); //error handler(?)\n\n    event.preventDefault(); //Putter inn fil fra filepond inn i bildefil også henter ut denne\n\n    formData.set(\"bildefil\", files[0].file);\n    const imageFile = formData.get(\"bildefil\"); //Lagrer alt som trengs fra Form og bildefil\n\n    userFile.imageType = imageFile.type;\n    userFile.imageName = imageFile.name; //Lagrer dato fra lastModifiedDate -> er den nøyaktig nok??\n\n    userFile.captureDate = new Date(imageFile.lastModifiedDate); //Sjekke om det finnes gps-verdier i filen\n\n    let exifrOutput = await exifr.gps(imageFile).catch(console.error); //Henter EXIFR verdiene fra funksjonen som parser\n\n    if (exifrOutput != null) {\n      userFile.latitude = (await exifr.gps(imageFile)).latitude;\n      userFile.longitude = (await exifr.gps(imageFile)).longitude; //må hente ut disse for så å hente ut verdiene fra arrayen\n\n      const gpsAlt = await exifr.parse(imageFile, [\"GPSAltitude\"]);\n      const gpsDirection = await exifr.parse(imageFile, [\"GPSImgDirection\"]);\n      userFile.GPSAltitude = gpsAlt.GPSAltitude;\n      userFile.GPSImgDirection = gpsDirection.GPSImgDirection;\n    } else {\n      console.log(\"Det finnes ikke \"); // Sjekke hvilket prosjekt det er\n\n      if (formData.get(\"prosjekt\") === \"E6 Kvithammar - Åsen\") {\n        const kvithamCoord = [63.490445, 10.873416];\n        userFile.latitude = kvithamCoord[0];\n        userFile.longitude = kvithamCoord[1];\n      }\n\n      if (formData.get(\"prosjekt\") === \"E39 Mandal\") {\n        const mandalCoord = [58.028566, 7.523384];\n        userFile.latitude = mandalCoord[0];\n        userFile.longitude = mandalCoord[1];\n      }\n    }\n\n    formData.append(\"imageType\", userFile.imageType);\n    formData.append(\"imageName\", userFile.imageName);\n    formData.append(\"latitude\", userFile.latitude);\n    formData.append(\"longitude\", userFile.longitude);\n    formData.append(\"GPSAltitude\", userFile.GPSAltitude);\n    formData.append(\"GPSImgDirection\", userFile.GPSImgDirection);\n    formData.append(\"captureDate\", userFile.captureDate); // Sletter filepond som er tom\n\n    formData.delete(\"filepond\");\n    console.log(\"Structure of formdata\" + [...formData]); //Sends userFile to API -> DB\n\n    /*\n    try {\n      await sendFile(formData);\n    } catch (error) {\n      console.error(error);\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"prosjekt\",\n        children: \"Prosjekt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"prosjekt\",\n        id: \"prosjekt\",\n        placeholder: \"velg prosjekt\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"E6 Kvithammar - \\xC5sen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"E39 Mandal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"parsell\",\n        children: \"Parsellnummer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        name: \"parsell\",\n        id: \"parsell\",\n        placeholder: \"Parselnummer\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"kategori\",\n        children: \"Kategori\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"kategori\",\n        id: \"kategori\",\n        multiple: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Elektro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Fjellsikring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Fundamentering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Geomatikk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Konstruksjon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Riving og sanering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Tunnel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Vann og avl\\xF8p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Veg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Markedsbilder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        color: \"muted\",\n        children: \"Velg flere kategorier ved \\xE5 holde inne \\\"command\\\" eller \\\"Alt\\\" p\\xE5 tastaturet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FilePond, {\n        files: files,\n        onupdatefiles: setFiles,\n        name: \"filepond\",\n        id: \"filepond\",\n        acceptedFileTypes: fileTypesAccepted,\n        labelIdle: \"Dra & Slippe filene eller <span class=\\\"filepond--label-action\\\"> Bla Gjennom </span>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      check: true,\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        check: true,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"checkbox\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), \" Godta at H\\xE6hre kan bruke bildene\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"info\",\n      children: \"Last opp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Opplastning, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n\n_c = Opplastning;\nexport default Opplastning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Opplastning\");","map":{"version":3,"sources":["/Users/helenemolberg/mobil-grensesnitt/src/components/pages/Opplastning.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","FormText","exifr","FilePond","registerPlugin","FilePondPluginImagePreview","FilePondPluginFileValidateType","Opplastning","files","setFiles","fileTypesAccepted","userFile","latitude","longitude","GPSAltitude","GPSImgDirection","imageName","imageType","captureDate","Date","handleSubmit","event","formData","FormData","target","preventDefault","set","file","imageFile","get","type","name","lastModifiedDate","exifrOutput","gps","catch","console","error","gpsAlt","parse","gpsDirection","log","kvithamCoord","mandalCoord","append","delete"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport exifr from \"exifr\";\nimport './Opplastning.css';\n//import { sendFile } from \"../API\";\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginFileValidateType);\n\n\n\n/* Må legge til resten av prosjektene og kategorier som er ønsket. \n    Til jeg finne ut hvordan man kan hente dem fra databasen inn i listen...??\n*/\n\nconst Opplastning = () => {\n  const [files, setFiles] = useState([]);\n\n  const fileTypesAccepted = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\n\n  const userFile = {\n    latitude: \"\",\n    longitude: \"\",\n    GPSAltitude: \"\",\n    GPSImgDirection: \"\",\n    imageName: \"\",\n    imageType: \"\",\n    captureDate: Date,\n  };\n\n  const handleSubmit = async (event) => {\n    //Henter svarene fra formen\n    const formData = new FormData(event.target);\n    //error handler(?)\n    event.preventDefault();\n    //Putter inn fil fra filepond inn i bildefil også henter ut denne\n    formData.set(\"bildefil\", files[0].file);\n    const imageFile = formData.get(\"bildefil\");\n\n    //Lagrer alt som trengs fra Form og bildefil\n    userFile.imageType = imageFile.type;\n    userFile.imageName = imageFile.name;\n\n    //Lagrer dato fra lastModifiedDate -> er den nøyaktig nok??\n    userFile.captureDate = new Date(imageFile.lastModifiedDate);\n\n    //Sjekke om det finnes gps-verdier i filen\n    let exifrOutput = await exifr.gps(imageFile).catch(console.error)\n    \n    //Henter EXIFR verdiene fra funksjonen som parser\n    if (exifrOutput != null){\n      userFile.latitude = (await exifr.gps(imageFile)).latitude;\n      userFile.longitude = (await exifr.gps(imageFile)).longitude;\n      //må hente ut disse for så å hente ut verdiene fra arrayen\n      const gpsAlt = await exifr.parse(imageFile, [\"GPSAltitude\"]);\n      const gpsDirection = await exifr.parse(imageFile, [\"GPSImgDirection\"]);\n\n      userFile.GPSAltitude = gpsAlt.GPSAltitude;\n      userFile.GPSImgDirection = gpsDirection.GPSImgDirection;\n\n    } else {\n      console.log(\"Det finnes ikke \");\n\n      // Sjekke hvilket prosjekt det er\n      if (formData.get(\"prosjekt\") === \"E6 Kvithammar - Åsen\") {\n        const kvithamCoord = [63.490445, 10.873416];\n\n        userFile.latitude = kvithamCoord[0];\n        userFile.longitude = kvithamCoord[1];\n      }\n      if(formData.get(\"prosjekt\") === \"E39 Mandal\") {\n        const mandalCoord = [58.028566, 7.523384];\n\n        userFile.latitude = mandalCoord[0];\n        userFile.longitude = mandalCoord[1];\n      }\n    }\n\n    formData.append(\"imageType\", userFile.imageType);\n    formData.append(\"imageName\", userFile.imageName);\n    formData.append(\"latitude\", userFile.latitude);\n    formData.append(\"longitude\", userFile.longitude);\n    formData.append(\"GPSAltitude\", userFile.GPSAltitude);\n    formData.append(\"GPSImgDirection\", userFile.GPSImgDirection);\n    formData.append(\"captureDate\", userFile.captureDate);\n\n    // Sletter filepond som er tom\n    formData.delete(\"filepond\");\n\n    console.log(\"Structure of formdata\" + [...formData]);\n\n    //Sends userFile to API -> DB\n    /*\n    try {\n      await sendFile(formData);\n    } catch (error) {\n      console.error(error);\n    }*/\n\n  };\n\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      className=\"body\"\n    >\n      <FormGroup>\n        <Label for=\"prosjekt\">Prosjekt</Label>\n        <Input\n          type=\"select\"\n          name=\"prosjekt\"\n          id=\"prosjekt\"\n          placeholder=\"velg prosjekt\"\n        >\n          <option>E6 Kvithammar - Åsen</option>\n          <option>E39 Mandal</option>\n        </Input>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"parsell\">Parsellnummer</Label>\n        <Input\n          type=\"number\"\n          name=\"parsell\"\n          id=\"parsell\"\n          placeholder=\"Parselnummer\"\n          required\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"kategori\">Kategori</Label>\n        <Input type=\"select\" name=\"kategori\" id=\"kategori\" multiple>\n          <option>Elektro</option>\n          <option>Fjellsikring</option>\n          <option>Fundamentering</option>\n          <option>Geomatikk</option>\n          <option>Konstruksjon</option>\n          <option>Riving og sanering</option>\n          <option>Tunnel</option>\n          <option>Vann og avløp</option>\n          <option>Veg</option>\n          <option>Markedsbilder</option>\n        </Input>\n        <FormText color=\"muted\">\n          Velg flere kategorier ved å holde inne \"command\" eller \"Alt\" på tastaturet.\n        </FormText>\n      </FormGroup>\n      <FormGroup>\n        <FilePond \n         files={files}\n         onupdatefiles={setFiles}\n         name=\"filepond\"\n         id=\"filepond\"\n         acceptedFileTypes={fileTypesAccepted}\n         labelIdle='Dra & Slippe filene eller <span class=\"filepond--label-action\"> Bla Gjennom </span>'\n        />\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input type=\"checkbox\" required /> Godta at Hæhre kan bruke bildene\n        </Label>\n      </FormGroup>\n      <Button type=\"submit\" color=\"info\">\n        Last opp\n      </Button>\n    </Form>\n  );\n};\n\nexport default Opplastning;\n"]},"metadata":{},"sourceType":"module"}