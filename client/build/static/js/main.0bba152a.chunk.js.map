{"version":3,"sources":["API.js","components/pages/Upload.js","components/LocateControl.js","components/infoToolTips/DateInfo.js","components/infoToolTips/CategoryInfo.js","components/infoToolTips/ProjectInfo.js","components/infoToolTips/ParsellInfo.js","images/position.svg","images/rar.svg","components/Markers.js","components/pages/Map.js","components/Navigation.js","App.js","index.js"],"names":["API_URL","a","fetch","response","json","getFilesProject","prosjekt","console","log","getPictures","filename","text","data","sendFile","entry","method","body","then","res","catch","error","registerPlugin","FilePondPluginImagePreview","FilePondPluginFileValidateType","Opplastning","useState","files","setFiles","userFile","latitude","longitude","GPSAltitude","GPSImgDirection","imageName","imageType","captureDate","Date","handleSubmit","event","formData","FormData","target","preventDefault","set","file","imageFile","get","type","name","lastModifiedDate","exifr","gps","parse","gpsAlt","gpsDirection","kvithamCoord","mandalCoord","append","delete","alert","Form","onSubmit","className","FormGroup","Label","for","Input","id","placeholder","required","multiple","FormText","color","onupdatefiles","acceptedFileTypes","labelIdle","check","Button","LocateControl","this","props","options","startDirectly","map","leaflet","lc","Locate","addTo","start","Component","withLeaflet","DateInfo","tooltipOpen","setTooltipOpen","style","textDecoration","href","Tooltip","placement","isOpen","toggle","CategoryInfo","ProjectInfo","ParsellInfo","gpsDirectionMarker","L","icon","iconUrl","positionUrl","iconSize","iconAnchor","popupAnchor","compass","projectOptions","value","label","categoryOptions","Kart","state","location","lat","lng","positionCoord","zoom","dropdownOpen","selectedOption","dates","images","imageURLS","handleChange","setState","handlePictures","Promise","resolve","getImages","position","Map","center","zoomControl","TileLayer","attribution","url","strings","title","onActive","GeoJSON","e6kaaData","Dropdown","DropdownToggle","caret","DropdownMenu","Card","CardTitle","onChange","menuColor","onSearchClick","par","onEnter","classNames","isMulti","menuPlacement","maxMenuHeight","locale","length","image","Marker","rotationAngle","Popup","prosjektOmrade","parsell","kommentar","kategori","src","width","height","alt","_id","Navigation","click","setClick","closeMobileMenu","Provider","to","onClick","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bba152a.chunk.js","sourcesContent":["const API_URL = 'http://localhost:1337/api/images';\n\n// Fetches all data\nexport async function getImages() {\n    //console.log(\"mmm: \", API_URL);\n    const response = await fetch(API_URL);\n    return response.json();\n}\n\n// Sorts on one project\nexport async function getFilesProject(prosjekt) {\n    console.log(\"11: \", `${API_URL}/${prosjekt}`);\n    const response = await fetch(`${API_URL}/${prosjekt}`);\n    return response.json();\n}\n\n// Fetches the pictures\nexport async function getPictures(filename) {\n    /*\n    const res = await fetch(`${API_URL}/image/${filename}`).then(response => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            throw new Error('error...');\n        }\n    })\n    .then(responseJson => {\n        return responseJson.data;\n    });\n    //const text = await response.json();\n    //return text.data; */\n    const response = await fetch(`${API_URL}/image/${filename}`);\n    const text = await response.json();\n    //console.log(text.data);\n    return text.data;\n}\n\n// Sort on DateRange\nexport async function getDateRange(value) {\n    console.log(value);\n    const response = await fetch(`${API_URL}/daterange/${value}`);\n    return response.json();\n}\n\n// Headeren må være tom\n// POST: the new entry data\nexport function sendFile(entry) {\n    return fetch(API_URL, {\n        method: 'POST',\n        body: entry,\n    })\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(error => {console.error(error) });\n}","import React, {useState} from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport exifr from \"exifr\";\nimport './Upload.css';\nimport { sendFile } from \"../../API\";\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginFileValidateType);\n\n\n\n/* Må legge til resten av prosjektene og kategorier som er ønsket. \n    Til jeg finne ut hvordan man kan hente dem fra databasen inn i listen...??\n*/\n\nconst Opplastning = () => {\n  const [files, setFiles] = useState([]);\n\n  const fileTypesAccepted = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\n\n  const userFile = {\n    latitude: \"\",\n    longitude: \"\",\n    GPSAltitude: \"\",\n    GPSImgDirection: \"\",\n    imageName: \"\",\n    imageType: \"\",\n    captureDate: Date,\n  };\n\n  const handleSubmit = async (event) => {\n    //Henter svarene fra formen\n    const formData = new FormData(event.target);\n    //error handler(?)\n    event.preventDefault();\n    //Putter inn fil fra filepond inn i bildefil også henter ut denne\n    formData.set(\"bildefil\", files[0].file);\n    const imageFile = formData.get(\"bildefil\");\n\n    //Lagrer alt som trengs fra Form og bildefil\n    userFile.imageType = imageFile.type;\n    userFile.imageName = imageFile.name;\n\n    //Lagrer dato fra lastModifiedDate -> er den nøyaktig nok??\n    userFile.captureDate = new Date(imageFile.lastModifiedDate);\n\n    //Sjekke om det finnes gps-verdier i filen\n    let exifrOutput = await exifr.gps(imageFile).catch(console.error)\n    \n    //Henter EXIFR verdiene fra funksjonen som parser\n    if (exifrOutput != null){\n      userFile.latitude = (await exifr.gps(imageFile)).latitude;\n      userFile.longitude = (await exifr.gps(imageFile)).longitude;\n      //må hente ut disse for så å hente ut verdiene fra arrayen\n      const gpsAlt = await exifr.parse(imageFile, [\"GPSAltitude\"]);\n      // Kompassretning \n      const gpsDirection = await exifr.parse(imageFile, [\"GPSImgDirection\"]);\n\n      userFile.GPSAltitude = gpsAlt.GPSAltitude;\n      userFile.GPSImgDirection = gpsDirection.GPSImgDirection;\n\n    } else {\n      console.log(\"Det finnes ikke \");\n\n      // Sjekke hvilket prosjekt det er\n      if (formData.get(\"prosjekt\") === \"E6 Kvithammar - Åsen\") {\n        const kvithamCoord = [63.490445, 10.873416];\n\n        userFile.latitude = kvithamCoord[0];\n        userFile.longitude = kvithamCoord[1];\n      }\n      if(formData.get(\"prosjekt\") === \"E39 Mandal\") {\n        const mandalCoord = [58.028566, 7.523384];\n\n        userFile.latitude = mandalCoord[0];\n        userFile.longitude = mandalCoord[1];\n      }\n    }\n\n    formData.append(\"imageType\", userFile.imageType);\n    formData.append(\"imageName\", userFile.imageName);\n    formData.append(\"latitude\", userFile.latitude);\n    formData.append(\"longitude\", userFile.longitude);\n    formData.append(\"GPSAltitude\", userFile.GPSAltitude);\n    formData.append(\"GPSImgDirection\", userFile.GPSImgDirection);\n    formData.append(\"captureDate\", userFile.captureDate);\n\n    // Sletter filepond som er tom\n    formData.delete(\"filepond\");\n\n    console.log(\"Structure of formdata\" + [...formData]);\n\n    //Sends userFile to API -> DB\n    try {\n      await sendFile(formData);\n      alert(\"Informasjonen har blitt lastet opp\");\n      \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      className=\"body\"\n    >\n        <h3 className=\"form-title\">Opplastning av bilder</h3>\n      <FormGroup>\n        <Label className=\"form-label\" for=\"prosjekt\">Prosjekt</Label>\n        <Input\n          type=\"select\"\n          name=\"prosjekt\"\n          id=\"prosjekt\"\n          placeholder=\"velg prosjekt\"\n        >\n          <option>E6 Kvithammar - Åsen</option>\n          <option>E39 Mandal</option>\n        </Input>\n      </FormGroup>\n      <FormGroup>\n        <Label className=\"form-label\" for=\"parsell\">Parsellnummer</Label>\n        <Input\n          type=\"number\"\n          name=\"parsell\"\n          id=\"parsell\"\n          placeholder=\"Parselnummer\"\n          required\n        />\n      </FormGroup>\n      <FormGroup>\n          <Label className=\"form-label\" for=\"kommentar\">Kommentar</Label>\n          <Input type=\"textarea\" name=\"kommentar\" id=\"kommentar\"/>\n      </FormGroup>\n      <FormGroup>\n        <Label className=\"form-label\" for=\"kategori\">Kategori</Label>\n        <Input type=\"select\" name=\"kategori\" id=\"kategori\" multiple>\n          <option>Elektro</option>\n          <option>Fjellsikring</option>\n          <option>Fundamentering</option>\n          <option>Geomatikk</option>\n          <option>Konstruksjon</option>\n          <option>Riving og sanering</option>\n          <option>Tunnel</option>\n          <option>Vann og avløp</option>\n          <option>Veg</option>\n          <option>Markedsbilder</option>\n        </Input>\n        <FormText color=\"muted\">\n          Velg flere kategorier ved å holde inne \"command\" eller \"Alt\" på tastaturet.\n        </FormText>\n      </FormGroup>\n      <FormGroup>\n        <FilePond \n         files={files}\n         onupdatefiles={setFiles}\n         name=\"filepond\"\n         id=\"filepond\"\n         acceptedFileTypes={fileTypesAccepted}\n         labelIdle='Dra & Slippe filene eller <span class=\"filepond--label-action\"> Bla Gjennom </span>'\n        />\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input type=\"checkbox\" required /> Godta at Hæhre kan bruke bildene\n        </Label>\n      </FormGroup>\n      <div className=\"button-form\">\n        <Button type=\"submit\" color=\"info\" >\n            Last opp\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Opplastning;\n","import {Component} from 'react';\nimport {withLeaflet} from 'react-leaflet';\nimport Locate from 'leaflet.locatecontrol';\n\n// Finds the position of the user\n\nclass LocateControl extends Component {\n    componentDidMount() {\n        const {options, startDirectly} = this.props;\n        const { map } = this.props.leaflet;\n\n        const lc = new Locate(options);\n        lc.addTo(map);\n\n        if (startDirectly){\n            // request location update and set location\n            lc.start();\n        }\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default withLeaflet(LocateControl);","import React, { useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport {BiInfoCircle} from 'react-icons/bi';\n\nconst DateInfo = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <div>\n      <p>Velg en dato eller et datointervall: <span style={{textDecoration: \"underline\", color:\"blue\"}} href=\"#\" id=\"dato\"><BiInfoCircle/></span></p>\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"dato\" toggle={toggle}>\n        Velg en ønsket dato eller et datointervall for søk i bildefilene\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default DateInfo;","import React, { useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport {BiInfoCircle} from 'react-icons/bi';\n\nconst CategoryInfo = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <div>\n      <p>Velg kategori/er: <span style={{textDecoration: \"underline\", color:\"blue\"}} href=\"#\" id=\"kategorier\"><BiInfoCircle/></span></p>\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"kategorier\" toggle={toggle}>\n        Velg en eller fler kategorier for søk i bildefilene\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default CategoryInfo;","import React, { useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport {BiInfoCircle} from 'react-icons/bi';\n\nconst ProjectInfo = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <div>\n      <p>Velg prosjekt: <span style={{textDecoration: \"underline\", color:\"blue\"}} href=\"#\" id=\"Prosjekt\"><BiInfoCircle/></span></p>\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"Prosjekt\" toggle={toggle}>\n        Velg prosjekt du vil sortere bildefilene for\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default ProjectInfo;","import React, { useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport {BiInfoCircle} from 'react-icons/bi';\n\nconst ParsellInfo = () => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <div>\n      <p>Skriv inn parsellnummer: <span style={{textDecoration: \"underline\", color:\"blue\"}} href=\"#\" id=\"parsell\"><BiInfoCircle/></span></p>\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"parsell\" toggle={toggle}>\n        Skriv inn parsellnummer for ønsket søk på bildefilene\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default ParsellInfo;","export default __webpack_public_path__ + \"static/media/position.5085c436.svg\";","export default __webpack_public_path__ + \"static/media/rar.be30cbbf.svg\";","import L from 'leaflet';\nimport positionUrl from '../images/position.svg';\nimport compass from '../images/rar.svg';\n\nexport const positionMarker = new L.icon({\n    iconUrl: positionUrl,\n    iconSize: [35, 51],\n    iconAnchor: [17, 51],\n    popupAnchor: [2, -40]\n});\n\nexport const gpsDirectionMarker = new L.icon({\n    iconUrl: compass,\n    iconSize: [20, 20],\n});","import React, { Component } from \"react\";\nimport { Map, TileLayer, GeoJSON, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport LocateControl from \"../LocateControl\";\nimport Control from \"react-leaflet-control\";\nimport Select from \"react-select\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Card,\n  CardTitle,\n} from \"reactstrap\";\nimport SearchField from \"react-search-field\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\n\nimport { getPictures, getImages, getFilesProject } from \"../../API\";\nimport * as e6kaaData from \"../../data/e6kaa.json\";\nimport DateInfo from \"../infoToolTips/DateInfo\";\nimport CategoryInfo from \"../infoToolTips/CategoryInfo\";\nimport ProjectInfo from \"../infoToolTips/ProjectInfo\";\nimport ParsellInfo from \"../infoToolTips/ParsellInfo\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport \"./Map.css\";\n\nimport { gpsDirectionMarker } from \"../Markers\";\n// Rotere markørene\nimport \"leaflet-rotatedmarker\";\n\n// Options for the different projects\nconst projectOptions = [\n  { value: [63.55144, 10.933473], label: \"E6 Kvithammar - Åsen\" },\n  { value: [58.093886, 7.644329], label: \"E39 Mandal\" },\n  { value: [59.001439, 9.613338], label: \"E18 Rugtvedt Dørdal\" },\n  //Legge til resterende\n];\n// Options for the different categories\nconst categoryOptions = [\n  { value: \"Elektro\", label: \"Elektro\" },\n  { value: \"Fjellsikring\", label: \"Fjellsikring\" },\n  { value: \"Fundamentering\", label: \"Fundamentering\" },\n  { value: \"Geomatikk\", label: \"Geomatikk\" },\n  { value: \"Konstruksjon\", label: \"Konstruksjon\" },\n  { value: \"Riving og sanering\", label: \"Riving og sanering\" },\n  { value: \"Tunnel\", label: \"Tunnel\" },\n  { value: \"Vann og avløp\", label: \"Vann og avløp\" },\n  { value: \"Veg\", label: \"Veg\" },\n  { value: \"Markedsbilder\", label: \"Markedsbilder\" },\n];\n\nexport default class Kart extends Component {\n  state = {\n    location: {\n      lat: 63.430515,\n      lng: 10.395053,\n    },\n    positionCoord: {\n      lat: 0,\n      lng: 0,\n    },\n    zoom: 5,\n    dropdownOpen: false,\n    selectedOption: null,\n    dates: null,\n    images: [],\n    imageURLS: [],\n  };\n\n  componentDidMount() {\n    getImages().then((images) => {\n      this.setState({\n        images: images.images,\n      });\n\n    });\n  }\n\n\n  handleChange = (selectedOption) => {\n    this.setState({\n      location: {\n        lat: selectedOption.value[0],\n        lng: selectedOption.value[1],\n      },\n      selectedOption: selectedOption,\n      zoom: 11,\n    });\n\n    // SORTERER PÅ PROSJEKT\n    getFilesProject(selectedOption.label)\n    .then(images => {\n      this.setState({\n        images: images.files\n      });\n    });\n  }\n\n  handlePictures = (name) => {\n    Promise.resolve(getPictures(name)).then(function (value) {\n      console.log(value);\n      return value;\n    })\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    const dropdownOpen = this.state.dropdownOpen;\n    const selectedOption = this.state;\n\n    console.log(this.state.images);\n\n    // Position of user\n    const locateOptions = {\n      position: \"topleft\",\n      strings: {\n        title: \"Vis posisjon min\",\n      },\n      onActive: () => {}, // callback before engine starts retrieving locations\n    };\n\n    return (\n      <div className=\"app\">\n        <Map\n          className=\"map\"\n          center={position}\n          zoom={this.state.zoom}\n          zoomControl={false}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <LocateControl options={locateOptions} />\n\n          <GeoJSON color=\"red\" data={e6kaaData.features} />\n\n          <Control position=\"topright\">\n            <Dropdown\n              isOpen={dropdownOpen}\n              toggle={() => {\n                this.setState({ dropdownOpen: !this.state.dropdownOpen });\n              }}\n            >\n              <DropdownToggle caret>\n                <FaSearch />\n              </DropdownToggle>\n              <DropdownMenu>\n                <Card className=\"message-form\">\n                  <CardTitle className=\"title\">Bildesøk</CardTitle>\n                  <ProjectInfo />\n                  <Select\n                    className=\"select-option\"\n                    value={selectedOption.label}\n                    onChange={this.handleChange}\n                    options={projectOptions}\n                    placeholder=\"Velg Prosjekt\"\n                    menuColor=\"blue\"\n                  />\n                  <ParsellInfo />\n                  <SearchField\n                    placeholder=\"parsellnummer\"\n                    onSearchClick={(par) => console.log(par)}\n                    onEnter={(par) => console.log(par)}\n                    classNames=\"search-Field\"\n                  />\n                  <CategoryInfo />\n                  <Select\n                    className=\"select-category\"\n                    options={categoryOptions}\n                    isMulti\n                    menuPlacement=\"auto\"\n                    maxMenuHeight={160}\n                  />\n                  <DateInfo />\n                  <DateRangePicker\n                    onChange={(dates) => this.setState({ dates })}\n                    value={this.state.dates}\n                    locale\n                    className=\"daterangePicker\"\n                  />\n                </Card>\n              </DropdownMenu>\n            </Dropdown>\n          </Control>\n          <MarkerClusterGroup>\n            {this.state.images.length > 0 &&\n              this.state.images.map((image) => (\n                <Marker\n                  key={image._id}\n                  position={[image.latitude, image.longitude]}\n                  icon={gpsDirectionMarker}\n                  rotationAngle={image.GPSImgDirection}\n                >\n                  <Popup>\n                    <b>Prosjekt: </b>\n                    {image.prosjekt} {image.prosjektOmrade}\n                    <p />\n                    <b>Parsell: </b>\n                    {image.parsell}\n                    <p />\n                    <b>Kommentar: </b>\n                    {image.kommentar}\n                    <p />\n                    <b>Kategori: </b>\n                    {image.kategori}\n                    <p />\n                    <b>Høydemeter: </b>\n                    {image.GPSAltitude}\n                    <p />\n                    <b>Dato tatt: </b>\n                    {image.captureDate}\n                    <p />\n                    <img\n                      src={`\"${this.handlePictures(image.imageName)}\"`}\n                      width=\"100\"\n                      height=\"100\"\n                      alt={image.imageName}\n                    />\n                  </Popup>\n                </Marker>\n              ))}\n          </MarkerClusterGroup>\n        </Map>\n      </div>\n    );\n  }\n}\n","import React, {useState} from 'react'\nimport {Link} from 'react-router-dom';\nimport {FaMapMarkedAlt, FaBars, FaTimes, FaMap} from 'react-icons/fa';\nimport {IconContext} from 'react-icons/lib';\nimport {AiOutlineCloudUpload} from 'react-icons/ai';\n\nimport './Navigation.css';\n\nfunction Navigation() {\n    const [click, setClick] = useState(false);\n    \n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    return (\n        <>\n        <IconContext.Provider value={{ color: '#fff' }}>\n          <nav className='navbar'>\n            <div className='navbar-container container'>\n              <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                <FaMapMarkedAlt className='navbar-icon' />\n                LAGRING\n              </Link>\n              <div className='menu-icon' onClick={handleClick}>\n                {click ? <FaTimes /> : <FaBars />}\n              </div>\n              <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li className='nav-item'>\n                  <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                    <AiOutlineCloudUpload className='nav-upload'/>\n                    Last opp bilder\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/kart'\n                    className='nav-links'\n                    onClick={closeMobileMenu}\n                  >\n                    <FaMap className='nav-kart'/>\n                    Kart\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </IconContext.Provider>\n      </>\n    )\n}\n\nexport default Navigation\n","import React from \"react\";\nimport \"./App.css\";\nimport Opplastning from './components/pages/Upload';\nimport Kart from './components/pages/Map';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        <Route path='/' exact component={Opplastning} />\n        <Route path='/kart' component={Kart} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'leaflet/dist/leaflet.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}